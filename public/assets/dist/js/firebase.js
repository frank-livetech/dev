const firebaseConfig = {
    apiKey: "AIzaSyBXaJPa95dTLBz36lmoDgVnR80_EQVVwVA",
    authDomain: "live-tech-cms.firebaseapp.com",
    databaseURL: "https://live-tech-cms-default-rtdb.firebaseio.com",
    projectId: "live-tech-cms",
    storageBucket: "live-tech-cms.appspot.com",
    messagingSenderId: "16545791116",
    appId: "1:16545791116:web:e55cbea48308f9b1828fa9",
    measurementId: "G-H3C052Z2LH"
};

firebase.initializeApp(firebaseConfig);
firebase.analytics();

// firebase chat db object
// var db = firebase.firestore();

const messaging = firebase.messaging();
messaging.usePublicVapidKey("BK8CHpqRSc6qjQDVSc6eQZCOganeqlTqBZa4kpAWOIHhYJFQPdNqe8rcngMWITo1UkHTcq9AQBva7Zuf8GRY0Hw");
// messaging.useServiceWorker('/framework/firebase-messaging-sw.js')
          
messaging.requestPermission().then(function(){
    return messaging.getToken();
}).then(function(token){
    $('#fcm_token').val(token)
    console.log(token)
}).catch(function(err){
    console.log('unable to get permission.'+err)
});

messaging.onMessage((payload) => {
    console.log('Message received. ', payload);
    // ...
    console.log(payload.data.unread_count)

    $('#noti_count').html(payload.data.unread_count);
    $('#noti_count').show();


    var today_date_time = new Date(); 
        
    var title = payload.notification.title;
    var body = payload.notification.body;
    var slug = payload.data.slug;
    var icon = payload.data.icon;
    var btn_class = payload.data.btn_class;
    if(body=='New ticket generated by system'){
        var messag = `<a href="`+slug+`" >`+body+` </a>`
        toastr.success(messag, { timeOut: 5000 });
        if (window.location.href.indexOf("ticket-manager") > -1) {
            get_ticket_table_list();
        }

    }

    var curr_user_image = $("#curr_user_image").val();
    var user_image = ``;

    if(curr_user_image) {
        user_image = `<img src="`+user_photo_url + '/' + curr_user_image  +`" class="img-fluid" style="border-radius: 50%;width: 40px;height: 40px;">`;
    }else{
        user_image = `<img src="`+user_photo_url + '/' + 'user-photo.jpg' +`" class="img-fluid" style="border-radius: 50%;width: 40px;height: 40px;">`;
    }

    

    var default_icon = `<span class="btn `+btn_class+` rounded-circle btn-circle"><i
    class="`+icon+`"></i></span>`;



    var noti_div = `<a href="{{ url('`+slug+`') }}"
                        class="message-item d-flex align-items-center border-bottom px-3 py-2">
                        `+ (payload.data.type == 'attendance' ? user_image : default_icon) +`
                        <div class="w-75 d-inline-block v-middle pl-2">
                            <h5 class="message-title mb-0 mt-1">`+title+`</h5> 
                            <span
                                class="font-12 text-nowrap d-block text-muted text-truncate">`+body+`
                            </span> 
                            <span class="font-12 text-nowrap d-block text-muted">`+moment(today_date_time).format('LT');+`
                            </span>
                        </div>
                    </a>`;
    $('.notifications').prepend(noti_div);
    
    if(payload.data.type == 'attendance'){
       
        // toastr.success(body, { timeOut: 5000 });
        getAllStaffData();
        getNotifications();

    }else if (payload.data.type == 'PM') {
        toastr.success(body, { timeOut: 5000 });

    }  

});

messaging.onBackgroundMessage((payload) => {
    console.log('[firebase.js] Received background message ', payload);
});



function getAllStaffData() {
    $.ajax({
        url: get_all_staff_att,
        type: 'GET',
        dataType: 'JSON',
        success: function(data) {
            console.log(data);
            var obj = data.data;

            $("#total_staff_count").text(data.total_staff);
            $("#active_staff_count").text(data.active_staff);
            $("#total_inactive_count").text(data.inactive_staff);

            $("#staff_table").DataTable().destroy();
            $.fn.dataTable.ext.errMode = "none";
            var tbl = $("#staff_table").DataTable({
                data: obj,
                pageLength: 25,
                bInfo: true,
                paging: true,
                columns: [{
                        data: null,
                        defaultContent: ""
                    },
                    {
                        "render": function(data, type, full, meta) {
                            if(full.user_clocked != null ) {
                                if(full.user_clocked.name != null) {
                                    return full.user_clocked.name;
                                }
                            }
                        }
                    },
                    {
                        "render": function(data, type, full, meta) {
                           let clockin = `<span class="badge badge-success py-1">Clocked In</span>`;
                           let clockout = `<span class="badge badge-danger py-1">Clocked Out</span>`;

                           if(full.clock_out == null) {
                               return clockin;
                           }else{
                               return clockout;
                           }

                        }
                    },
                    {
                        "render": function(data, type, full, meta) {
                            return full.date;
                        }
                    },
                    {
                        "render": function(data, type, full, meta) {
                            return full.clock_in != null ? full.clock_in : '---';
                        }
                    },
                    {
                        "render": function(data, type, full, meta) {
                            return full.clock_out != null ? full.clock_out : '---';
                        }
                    },
                    {
                        "render": function(data, type, full, meta) {
                            return full.hours_worked != null ? full.hours_worked : '---';
                        }
                    },
                ]
            });

            tbl.on("order.dt search.dt", function() {
                tbl.column(0, {
                        search: "applied",
                        order: "applied"
                    })
                    .nodes()
                    .each(function(cell, i) {
                        cell.innerHTML = i + 1;
                    });
            }).draw();
        },
        error: function(e) {
            console.log(e)
        }
    });
}
  
  